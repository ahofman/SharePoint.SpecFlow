// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SharePoint.SpecFlow.Sample
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SomeSampleFeatureFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SampleSetUp.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Some sample feature", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Some sample feature")))
            {
                SharePoint.SpecFlow.Sample.SomeSampleFeatureFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Some sample set up")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Some sample feature")]
        public virtual void SomeSampleSetUp()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Some sample set up", ((string[])(null)));
#line 3
this.ScenarioSetup(scenarioInfo);
#line 4
 testRunner.Given("there is a DocumentLibrary list called \"450_DocLib1\" in site \"http://rp2013-3:113" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
 testRunner.And("the list has a Document Set called \"450_DocSetA\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "WorkflowId",
                        "WorkflowAssociationName",
                        "WorkflowHistoryListName",
                        "WorkflowTasksListName",
                        "AssociationData",
                        "AutoStartChange",
                        "AutoStartCreate"});
            table1.AddRow(new string[] {
                        "79a21da3-a5ad-4b7e-b7f6-a28b85fa31eb",
                        "RP Submit Stub",
                        "Workflow History",
                        "Tasks",
                        "<SubmitWorkflowAssociationData xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns" +
                            ":xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><WorkflowType>SubmitStub</Workf" +
                            "lowType></SubmitWorkflowAssociationData>",
                        "true",
                        "true"});
#line 6
 testRunner.And("the list has a workflow associated", ((string)(null)), table1, "And ");
#line 9
 testRunner.And("there is a DocumentLibrary list called \"450_DocLib2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("the list has a Document Set called \"450_DocSetB\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "WorkflowId",
                        "WorkflowAssociationName",
                        "WorkflowHistoryListName",
                        "WorkflowTasksListName",
                        "AssociationData",
                        "AutoStartChange",
                        "AutoStartCreate"});
            table2.AddRow(new string[] {
                        "79a21da3-a5ad-4b7e-b7f6-a28b85fa31eb",
                        "RP Submit Stub",
                        "Workflow History",
                        "Tasks",
                        "<SubmitWorkflowAssociationData xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns" +
                            ":xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><WorkflowType>SubmitStub</Workf" +
                            "lowType></SubmitWorkflowAssociationData>",
                        "true",
                        "true"});
#line 11
 testRunner.And("the list has a workflow associated", ((string)(null)), table2, "And ");
#line 14
 testRunner.And("there is a file with contents \"abc\" at server relative url \"/450_DocLib1/450_DocS" +
                    "etA/450_blah.txt\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("there is a file with contents \"abc\" at server relative url \"/450_DocLib2/450_DocS" +
                    "etB/450_blah2.txt\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.When("the file is copied to \"/450_DocLib1/450_DocSetA/a_copy.txt\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
